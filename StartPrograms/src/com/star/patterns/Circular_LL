public class CircularLL {

    private Node head;
    private Node tail;

    public CircularLL() {
        this.head = null;
        this.tail = null;
    }

    public void insertFirst(int val) {
        Node node = new Node(val);
        if(head==null){
            head=node;
            tail=node;
        }
        tail.next = node;
        node.next=head;
        tail=node;
    }
    public void deleteValue(int val){
        Node node = head;
        if(node == null){
            return;
        }
        if(node.val==val){
            head = head.next;
            tail.next = head;
            return;
        }
        do{
            Node n = node.next;
            if(n.val==val){
                node.next = n.next;
                break;
            }
            node=node.next;
        } while (node!=head);
        System.out.println("HEAD");
    }
    public void display(){
        Node node = head;
        if(head!=null){
            do{
                System.out.print(node.val+"->");
                node = node.next;
            } while (node!=head);
        }
        System.out.println("HEAD");
    }
    
    private class Node{

        private Node next;
        private int val;

        public Node(int val, Node next) {
            this.val = val;
            this.next = next;
        }
        public Node(int val) {
            this.val = val;
        }

    }

}

//Can Implement others Methods like --> deleteFirst,deleteLast, deleteAfterValue e.t.c.
